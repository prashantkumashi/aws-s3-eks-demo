---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-sa
  namespace: demo
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::<AWS_ACCOUNT_ID>:role/<IAM_ROLE_NAME>

---
apiVersion: v1
kind: demo-configmap
metadata:
  name: demo-configmap
  namespace: demo
  labels:
    app: aws-s3-demo
data:
  AWS_ROLE_ARN: <replacewithrolearn>
  AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
  AWS_BUCKET_ARN: <replacewithbucketarn>
  AWS_BUCKET_NAME: <replacewithbucketname>

---
apiVersion: v1
kind: Deployment
metadata:
  name: sss-deployment
  namespace: demo
  labels:
    app: aws-s3-demo
spec:
  replicas: 1
  selector:
    matchLabels:
    app: aws-s3-demo
  template:
    metadata:
    labels:
      app: aws-s3-demo
    environment: dev
  spec:
    serviceAccountName: demo-sa
    containers:
    - name: aws-s3-demo
      image: <imagename>
      ports: 
      - containerPort: 8080
      securityContext:
        fsGroup: 65534
    volumeMounts:
    - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
      name: aws-iam-token
      readOnly: true
    envFrom:
      - configMapRef:
          name: demo-configmap
  volumes:
  - name: aws-iam-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          audience: sts.amazonaws.com
          expirationSeconds: 86400
          path: token

---
apiVersion: v1
kind: Service
metadata:
  name: aws-s3-demo-svc
  namespace: demo
  labels:
    app: aws-s3-demo
spec:
  selector:
    app: aws-s3-demo
  ports:
  - port: 80
    targetPort: 8080
