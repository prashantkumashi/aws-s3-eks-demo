---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-sa
  namespace: demo
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::12345678910:role/<IAMROLENAME>

---
apiVersion: v1
kind: demo-configmap
metadata:
  name: demo-configmap
  namespace: demo
  labels:
    app: aws-s3-demo
data:
  AWS_ROLE_ARN: arn:aws:iam::12345678910:role/<IAMROLENAME>
  AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
  AWS_BUCKET_ARN: arn:aws:s3:::<bucketname>
  AWS_BUCKET_NAME: <bucketname>
  AWS_REGION: <regionname>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sss-deployment
  namespace: demo
  labels:
    app: aws-s3-demo
spec:
  selector:
    matchLabels:
      app: aws-s3-demo
  replicas: 1
  template:
    metadata:
      labels:
        app: aws-s3-demo
        environment: dev
    spec:
      serviceAccountName: demo-sa
      securityContext:
        fsGroup: 65534
      containers:
      - name: aws-s3-demo
        image: prashant2020/aws-s3-eks-demo:1.11
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: demo-configmap
        volumeMounts:
        - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
          name: aws-iam-token
          readOnly: true
      volumes:
      - name: aws-iam-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: sts.amazonaws.com
              expirationSeconds: 86400
              path: token

---
apiVersion: v1
kind: Service
metadata:
  name: aws-s3-demo-svc
  namespace: demo
  labels:
    app: aws-s3-demo
spec:
  type: NodePort
  selector:
    app: aws-s3-demo
  ports:
  - port: 80
    nodePort: 30989
    targetPort: 8080
